#include <iostream>
#include <cstdlib>
#include <conio.h>

using namespace std;


class fraction
{
private:
	int ch;
	int znam;
public:
	fraction() : ch(0), znam(0)
	{}
	fraction(int a, int b) : ch(a), znam(b)
	{}
	void getFr()
	{
		cout << "Введи дробь (a/b) - ";
		char a = 0;
		while (48 <= (a = _getche()) and a <= 57)
		{
			a = a - 48;
			ch = ch * 10 + a;
		}
		a = 0;
		while (48 <= (a = _getche()) and a <= 57)
		{
			a = a - 48;
			znam = znam * 10 + a;
		}
		cout << endl;
	}
	void show()
	{
		if (ch == 0)
			cout << "Дробь = 0" << endl;
		else
			if (ch == znam)
				cout << "Дробь = 1" << endl;
			else
			{
				if (ch < znam)
				{
					int del = 1;
					for (int i = 1; i <= ch; i++)
					{
						if (ch % i == 0 && znam % i == 0)
							del = i;
					}
					ch = ch / del;
					znam = znam / del;
				}
				if (ch > znam)
				{
					int del = 1;
					for (int i = 1; i <= znam; i++)
					{
						if (ch % i == 0 && znam % i == 0)
							del = i;
					}
					ch = ch / del;
					znam = znam / del;
				}
				cout << "Равно = " << ch << "/" << znam << endl;
			}
	}
	fraction operator+ (fraction a)
	{
		fraction b;
		b.ch = ch * a.znam + znam * a.ch;
		b.znam = znam * a.znam;
		return b;
	}
	fraction operator-(fraction a)
	{
		fraction b;
		b.ch = ch * a.znam - znam * a.ch;
		b.znam = znam * a.znam;
		return b;
	}
	fraction operator*(fraction a)
	{
		fraction b;
		b.ch = ch * a.ch;
		b.znam = znam * a.znam;
		return b;
	}
	fraction operator/(fraction a)
	{
		fraction b;
		b.ch = ch * a.znam;
		b.znam = znam * a.ch;
		return b;
	}
	bool operator==(fraction a)
	{
		if (ch == a.ch and znam == a.znam)
			return true;
		else return false;
	}
	bool operator!=(fraction a)
	{
		if (ch != a.ch or znam != a.znam)
			return true;
		else return false;
	}
	int retZnam() const
	{
		return znam;
	}
	friend istream& operator>> (istream&, fraction&);
	friend ostream& operator<< (ostream&, fraction&);
};
ostream& operator<< (ostream&aa, fraction&c)
{
	if (c.ch == 0)
		aa << "Дробь = 0" << endl;
	else
		if (c.ch == c.znam)
			aa << "Дробь = 1" << endl;
		else
		{
			if (c.ch < c.znam)
			{
				int del = 1;
				for (int i = 1; i <= c.ch; i++)
				{
					if (c.ch % i == 0 && c.znam % i == 0)
						del = i;
				}
				c.ch = c.ch / del;
				c.znam = c.znam / del;
			}
			if (c.ch > c.znam)
			{
				int del = 1;
				for (int i = 1; i <= c.znam; i++)
				{
					if (c.ch % i == 0 && c.znam % i == 0)
						del = i;
				}
				c.ch = c.ch / del;
				c.znam = c.znam / del;
			}
			cout << "Равно = " << c.ch << "/" << c.znam << endl;
		}
	return aa;
}
istream& operator>> (istream&aa, fraction&c)
{
	char op;
	while (true)
	{
		cout << "\nВведите дробь     ";
		aa >> c.ch >> op >> c.znam;
		if (aa.good() && c.znam!=0)
		{
			aa.ignore(10, '\n');
			break;
		}
		aa.clear();
		cout << "Неправильный ввод данных";
		aa.ignore(10, '\n');
	}
	return aa;
}
int main()
{
	system("chcp 1251>nul");
	const fraction s(1, 0);
	fraction a, b, c;
	char sim = 0;
	do {
		cin>>a;
		cin >> b;
		if (a.retZnam() == s.retZnam() || b.retZnam() == s.retZnam())
		{
			cout << "Неверная дробь";
			break;
		}
		c = a + b;
		cout << c;
		c = a - b;
		cout << c;
		c = a * b;
		cout << c;
		c = a / b;
		cout << c;
	} while (27 != (sim = _getche()));
	system("pause>nul");
	return 0;
}
