#include <iostream>
#include <cstdlib>
#include <conio.h>

using namespace std;

class ster
{
private:
	long funt;
	int shiling;
	int pens;
public:
	ster();
	ster(double);
	ster(long, int, int);
	void get_ster();
	void show();
	ster operator+(ster);
	ster operator-(ster);
	ster operator*(double);
	ster operator/(double);
	ster operator/(ster);
};
ster::ster(): funt(0),shiling(0),pens(0)
{}
ster::ster(double a)
{
	funt = static_cast<long>(a);
	shiling = static_cast<int>((a - static_cast<int>(a))*100) / 5;
	pens = static_cast<int>((a - static_cast<int>(a)) * 100) % 5;
}
ster::ster(long a, int b, int c) :funt(a), shiling(b), pens(c)
{}
void ster::get_ster()
{
	char a;
	cout << "Введите сумму (J9.19.11)  -  ";
	a = _getche();
	while ((48 <= (a = _getche()) && a <= 57))
	{
		a = a - 48;
		funt = funt * 10 + a;
	}
	a = 0;
	while ((48 <= (a = _getche()) && a <= 57))
	{
		a = a - 48;
		shiling = shiling * 10 + a;
	}
	a = 0;
	while ((48 <= (a = _getche()) && a <= 57))
	{
		a = a - 48;
		pens = pens * 10 + a;
	}
	cout << endl;
}
void ster::show()
{
	cout << "J" << funt << "." << shiling << "." << pens << endl;
}
ster ster::operator+(ster a)
{
	ster b;
	b.funt = funt + a.funt;
	b.shiling = shiling + a.shiling;
	b.pens = pens + a.pens;

	b.shiling = b.shiling + b.pens / 12;
	b.pens = b.pens % 12;

	b.funt = b.funt + b.shiling / 20;
	b.shiling = b.shiling % 20;
	return b;
}
ster ster::operator-(ster a)
{
	ster b;
	b.funt = funt - a.funt;
	b.shiling = shiling - a.shiling;
	b.pens = pens - a.pens;

	b.shiling = b.shiling - b.pens / 12;
	b.pens = b.pens % 12;

	b.funt = b.funt - b.shiling / 20;
	b.shiling = b.shiling % 20;
	return b;
}
ster ster::operator*(double a)
{
	ster b(a);
	ster c;
	c.funt = b.funt * funt;
	c.shiling = b.shiling * shiling;
	c.pens = b.pens * pens;

	c.shiling = c.shiling + c.pens / 12;
	c.pens = c.pens % 12;

	c.funt = c.funt + c.shiling / 20;
	c.shiling = c.shiling % 20;
	return c;
}
ster ster::operator/(double a)
{
	ster b(a);
	ster c;
	c.funt =  funt/ b.funt;
	c.shiling =  shiling/ b.shiling;
	c.pens = pens/ b.pens ;

	c.shiling = c.shiling + c.pens / 12;
	c.pens = c.pens % 12;

	c.funt = c.funt + c.shiling / 20;
	c.shiling = c.shiling % 20;
	return c;
}
ster ster::operator/(ster a)
{
	ster b;
	b.funt = funt / a.funt;
	b.shiling = shiling / a.shiling;
	b.pens = pens / a.pens;

	b.shiling = b.shiling + b.pens / 12;
	b.pens = b.pens % 12;

	b.funt = b.funt + b.shiling / 20;
	b.shiling = b.shiling % 20;
	return b;
}
int main()
{
	system("chcp 1251>nul");
	ster a, b, c;
	a.get_ster();
	b.get_ster();
	double d = 1.11;
	c = a + b;
	c.show();
	c = a - b;
	c.show();
	c = a * d;
	c.show();
	c = a / d;
	c.show();
	c = a / b;
	c.show();
	system("pause>nul");
	return 0;
}
